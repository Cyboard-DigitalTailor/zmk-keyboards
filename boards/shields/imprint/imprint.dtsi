#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &imprint_function_row;
    };

    default_transform: keymap_transform_0 {//contains all possible key postions on the first 6 columns and 6 thumb keys of the imprint flex-pcb system
        compatible = "zmk,matrix-transform";
        columns = <8>;
        rows = <14>;
        map = <
RC(6,5) RC(6,4) RC(6,3) RC(6,2) RC(6,1) RC(6,0)                           RC(13,0) RC(13,1) RC(13,2) RC(13,3) RC(13,4) RC(13,5)
RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0)                           RC(12,0) RC(12,1) RC(12,2) RC(12,3) RC(12,4) RC(12,5)
RC(4,5) RC(4,4) RC(4,3) RC(4,2) RC(4,1) RC(4,0)                           RC(11,0) RC(11,1) RC(11,2) RC(11,3) RC(11,4) RC(11,5)
RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1) RC(3,0)                           RC(10,0) RC(10,1) RC(10,2) RC(10,3) RC(10,4) RC(10,5)
RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)                           RC(9,0)  RC(9,1)  RC(9,2)  RC(9,3)  RC(9,4)  RC(9,5)
RC(1,5) RC(1,4) RC(1,3) RC(1,2) RC(1,1) RC(1,0)                           RC(8,0)  RC(8,1)  RC(8,2)  RC(8,3)  RC(8,4)  RC(8,5)
                                    RC(0,3) RC(0,2) RC(0,1)   RC(7,1) RC(7,2) RC(7,3)
                                    RC(0,7) RC(0,6) RC(0,5)   RC(7,5) RC(7,6) RC(7,7)
        >;
    };

    imprint_function_row: keymap_transform_1 {
        compatible = "zmk,matrix-transform";
        columns = <8>;
        rows = <14>;
        map = <
RC(6,5) RC(6,4) RC(6,3) RC(6,2) RC(6,1) RC(6,0)                           RC(13,0) RC(13,1) RC(13,2) RC(13,3) RC(13,4) RC(13,5)
RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0)                           RC(12,0) RC(12,1) RC(12,2) RC(12,3) RC(12,4) RC(12,5)
RC(4,5) RC(4,4) RC(4,3) RC(4,2) RC(4,1) RC(4,0)                           RC(11,0) RC(11,1) RC(11,2) RC(11,3) RC(11,4) RC(11,5)
RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1) RC(3,0)                           RC(10,0) RC(10,1) RC(10,2) RC(10,3) RC(10,4) RC(10,5)
RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)                           RC(9,0)  RC(9,1)  RC(9,2)  RC(9,3)  RC(9,4)  RC(9,5)
                RC(1,3) RC(1,2)                                                             RC(8,2)  RC(8,3)
                                    RC(0,3) RC(0,2) RC(0,1)   RC(7,1) RC(7,2) RC(7,3)
                                    RC(0,7) RC(0,6) RC(0,5)   RC(7,5) RC(7,6) RC(7,7)
        >;
    };

    dactyl_single_arc_number_row: keymap_transform_2 {
        compatible = "zmk,matrix-transform";
        columns = <8>;
        rows = <14>;
        map = <
RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0)                           RC(12,0) RC(12,1) RC(12,2) RC(12,3) RC(12,4) RC(12,5)
RC(4,5) RC(4,4) RC(4,3) RC(4,2) RC(4,1) RC(4,0)                           RC(11,0) RC(11,1) RC(11,2) RC(11,3) RC(11,4) RC(11,5)
RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1) RC(3,0)                           RC(10,0) RC(10,1) RC(10,2) RC(10,3) RC(10,4) RC(10,5)
RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)                           RC(9,0)  RC(9,1)  RC(9,2)  RC(9,3)  RC(9,4)  RC(9,5)
RC(1,5) RC(1,4) RC(1,3) RC(1,2)                                                             RC(8,2)  RC(8,3)  RC(8,4)  RC(8,5)
                                    RC(0,3) RC(0,2) RC(0,1)   RC(7,1) RC(7,2) RC(7,3)
        >;
    };

    dactyl_single_arc_letters_only: keymap_transform_3 {
        compatible = "zmk,matrix-transform";
        columns = <8>;
        rows = <14>;
        map = <
RC(4,5) RC(4,4) RC(4,3) RC(4,2) RC(4,1) RC(4,0)                           RC(11,0) RC(11,1) RC(11,2) RC(11,3) RC(11,4) RC(11,5)
RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1) RC(3,0)                           RC(10,0) RC(10,1) RC(10,2) RC(10,3) RC(10,4) RC(10,5)
RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)                           RC(9,0)  RC(9,1)  RC(9,2)  RC(9,3)  RC(9,4)  RC(9,5)
RC(1,5) RC(1,4) RC(1,3) RC(1,2)                                                             RC(8,2)  RC(8,3)  RC(8,4)  RC(8,5)
                                    RC(0,3) RC(0,2) RC(0,1)   RC(7,1) RC(7,2) RC(7,3)
        >;
    };

    dactyl_manuform_number_row: keymap_transform_4 {
        compatible = "zmk,matrix-transform";
        columns = <8>;
        rows = <14>;
        map = <
RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1) RC(5,0)                           RC(12,0) RC(12,1) RC(12,2) RC(12,3) RC(12,4) RC(12,5)
RC(4,5) RC(4,4) RC(4,3) RC(4,2) RC(4,1) RC(4,0)                           RC(11,0) RC(11,1) RC(11,2) RC(11,3) RC(11,4) RC(11,5)
RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1) RC(3,0)                           RC(10,0) RC(10,1) RC(10,2) RC(10,3) RC(10,4) RC(10,5)
RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)                           RC(9,0)  RC(9,1)  RC(9,2)  RC(9,3)  RC(9,4)  RC(9,5)
RC(1,5) RC(1,4) RC(1,3) RC(1,2)                                                             RC(8,2)  RC(8,3)  RC(8,4)  RC(8,5)
                                    RC(0,3) RC(0,2) RC(0,1)   RC(7,1) RC(7,2) RC(7,3)
                                    RC(0,7) RC(0,6) RC(0,5)   RC(7,5) RC(7,6) RC(7,7)
        >;
    };

    legacy_single_arc_imprint: keymap_transform_5 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <14>;
        map = <
RC(6,6) RC(6,5) RC(6,4) RC(6,3) RC(6,2) RC(6,1)                 RC(13,1) RC(13,2) RC(13,3) RC(13,4) RC(13,5) RC(13,6)
RC(5,6) RC(5,5) RC(5,4) RC(5,3) RC(5,2) RC(5,1)                 RC(12,1) RC(12,2) RC(12,3) RC(12,4) RC(12,5) RC(12,6)
RC(4,6) RC(4,5) RC(4,4) RC(4,3) RC(4,2) RC(4,1)                 RC(11,1) RC(11,2) RC(11,3) RC(11,4) RC(11,5) RC(11,6)
RC(3,6) RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1)                 RC(10,1) RC(10,2) RC(10,3) RC(10,4) RC(10,5) RC(10,6)
RC(2,6) RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1)                 RC(9,1)  RC(9,2)  RC(9,3)  RC(9,4)  RC(9,5) RC(9,6)
                RC(1,4) RC(1,3) RC(1,2) RC(1,1) RC(1,0) RC(8,0) RC(8,1)  RC(7,2)  RC(8,3)  RC(8,4)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";

        wakeup-source;

        diode-direction = "row2col";
        col-gpios
            = <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col0 from schematic
            , <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col1 from schematic
            , <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col2 from schematic
            , <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col3 from schematic
            , <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col4 from schematic
            , <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col5 from schematic
            , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col6 from schematic
            , <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // col7 from schematic
            ;

    };

    trackball_central_listener: trackball_central_listener {
        compatible = "zmk,input-listener";
        status = "disabled";
    };

    split_inputs {
        #address-cells = <1>;
        #size-cells = <0>;

        trackball_peripheral_split: trackball_peripheral_split@0 {
            compatible = "zmk,input-split";
            reg = <0>;
        };
    };

    trackball_peripheral_listener: trackball_peripheral_listener {
        compatible = "zmk,input-listener";
        status = "disabled";
        device = <&trackball_peripheral_split>;
    };
};
