#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp ESC    &kp F1    &kp F2    &kp F3    &kp F4  &kp F5                                         &kp F6      &kp F7     &kp F8    &kp F9   &kp F10  &kp F11
 &kp EQL    &kp N1    &kp N2    &kp N3    &kp N4  &kp N5                                         &kp N6      &kp N7     &kp N8    &kp N9   &kp N0   &kp MINUS
 &kp TAB    &kp Q     &kp W     &kp E     &kp R   &kp T                                          &kp Y       &kp U      &kp I     &kp O    &kp P    &kp BSLH
 &kp LCTRL  &kp A     &kp S     &kp D     &kp F   &kp G                                          &kp H       &kp J      &kp K     &kp L    &kp SEMI &kp SQT
 &kp LSHFT  &kp Z     &kp X     &kp C     &kp V   &kp B                                          &kp N       &kp M      &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                      &bt BT_CLR  &bt BT_SEL 0                                                                                &kp LBKT  &kp RBKT
                                                  &kp RET   &kp DEL        &kp ESC              &kp GRAVE &kp BSPC &kp SPACE
                                                  &kp LGUI  &rgb_ug RGB_ON &ext_power EP_OFF    &kp CAPS &mo 2 &mo 1
            >;
        };

        Layer__1 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans   &trans   &trans    &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans   &trans   &trans    &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &kp HOME &kp UP   &kp END   &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &kp LEFT &kp DOWN &kp RIGHT &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans   &trans   &trans    &trans  &trans
                 &trans  &trans                                                                      &trans   &trans
                                      &trans  &trans &trans       &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
                                      &trans  &trans &trans       &kp C_PREV   &kp C_NEXT   &trans
            >;
        };

        Layer__2 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &rgb_ug RGB_TOG  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
                 &trans  &trans                                                                     &trans  &trans
                                         &trans  &trans &trans        &trans &trans &trans
                                         &trans  &trans &trans        &trans &trans &trans
            >;
        };

        Layer__3 {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans                            &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &trans  &trans  &trans  &trans  &trans
                 &trans  &trans                                                                     &trans  &trans
                                         &trans  &trans &trans        &trans &trans &trans
                                         &trans  &trans &trans        &trans &trans &trans
            >;
        };
    };
};

// //right hand trackball overrides
// &trackball_peripheral_listener {
//     input-processors =
//         <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,//this gets it to the default installation orientation
//         <&zip_temp_layer 3 500>;//activate layer 3 within 500ms of the trackball moving
// };
// //left hand trackball overrides
// &trackball_central_listener {
//     input-processors = 
//         <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,//this gets it to the default installation orientation
//         <&zip_xy_scaler 1 3>,//multiply sensitivity by 1, divide by 3 (make it slower for scrolling)
//         <&zip_xy_to_scroll_mapper>,//make this trackball output scrolling events by default instead of cursor movement
//         <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;//invert vertical scrolling so that the view moves in the same direction as the top of the trackball.
// };
